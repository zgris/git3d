<head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5905482226999721" crossorigin="anonymous"></script>
</head>


<style>
/* Container for the list of repositories */
.flex-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px; /* Space between tiles */
    justify-content: center;
}

/* Individual repository tile */
.flex-item {
    display: flex;
	justify-content: center;
    flex-direction: column;
    width: 100%;
    max-width: 300px; /* Maximum width for each tile */
	max-height: 400px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.25);
    overflow: hidden;
    margin-bottom: 20px; /* Space between rows */
}

/* Thumbnail container */
.flex-item-thumbnail {
    display: flex;
	width: 100%;
	margin-top: -10px;
    align-items: center;
	justify: center;
	justify-content: center;
    overflow: hidden;
	height: 300px;
	border-radius: 6px;
	box-shadow: 0 2px 5px rgba(0,0,0,0.5);

}

/* Thumbnail image */
.repo-thumbnail {
    width: 100%;
	height: 100%;
	justify: center;
    object-fit: cover; /* Ensures the image covers the entire area, cropping if necessary */
}

/* Main content container */
.flex-item-main {
    display: flex;
    flex-direction: column;
    padding: 10px;
    text-align: center;
    flex-grow: 1;
    margin-bottom: 10px; /* Optional: Add this line to add some margin from the bottom */
}

/* Title and other details */
.flex-item-title {
    font-size: 1.1em;
    margin: 10px 0;
}

.flex-item-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

.flex-item-body {
    font-size: 0.9em;
    color: #555;
}

/* Adjust layout for smaller screens */
@media (max-width: 600px) {
    .flex-item {
        width: 100%;
    }
}
</style>

<div class="flex-list" id="repo-list">
    {{range .Repos}}
        <!-- Regular Tile -->
        <div class="flex-item">
            <div class="flex-item-thumbnail">
                <img src="/assets/img/logo.svg" data-repo="{{.FullName}}" class="repo-thumbnail">
            </div>
            <div class="flex-item-main">
                <div class="flex-item-title">
                    {{if and (or $.PageIsExplore $.PageIsProfileStarList) .Owner}}
                    <a class="text primary name" href="{{.Owner.HomeLink}}">{{.Owner.Name}}</a>/
                    {{end}}
                    <a class="text primary name" href="{{.Link}}">{{.Name}}</a>
                </div>
                <div class="flex-item-header">
                    <span class="label-list">
                        {{if .IsArchived}}
                            <span class="ui basic label">{{ctx.Locale.Tr "repo.desc.archived"}}</span>
                        {{end}}
                        {{if .IsPrivate}}
                            <span class="ui basic label">{{ctx.Locale.Tr "repo.desc.private"}}</span>
                        {{else}}
                            {{if .Owner.Visibility.IsPrivate}}
                                <span class="ui basic label">{{ctx.Locale.Tr "repo.desc.internal"}}</span>
                            {{end}}
                        {{end}}
                        {{if .IsTemplate}}
                            <span class="ui basic label">{{ctx.Locale.Tr "repo.desc.template"}}</span>
                        {{end}}
                        {{if eq .ObjectFormatName "sha256"}}
                            <span class="ui basic label">{{ctx.Locale.Tr "repo.desc.sha256"}}</span>
                        {{end}}
                    </span>
                    <div class="muted-links">
                        {{if .PrimaryLanguage}}
                            <a class="flex-text-inline" href="?q={{$.Keyword}}&sort={{$.SortType}}&language={{.PrimaryLanguage.Language}}{{if $.TabName}}&tab={{$.TabName}}{{end}}">
                                <i class="color-icon tw-mr-2" style="background-color: {{.PrimaryLanguage.Color}}"></i>
                                {{.PrimaryLanguage.Language}}
                            </a>
                        {{end}}
                        {{if not $.DisableStars}}
                            <a class="flex-text-inline" href="{{.Link}}/stars">
                                <span aria-label="{{ctx.Locale.Tr "repo.stars"}}">{{svg "octicon-star" 16}}</span>
                                <span {{if ge .NumStars 1000}}data-tooltip-content="{{.NumStars}}"{{end}}>{{CountFmt .NumStars}}</span>
                            </a>
                        {{end}}
                        <a class="flex-text-inline" href="{{.Link}}/forks">
                            <span aria-label="{{ctx.Locale.Tr "repo.forks"}}">{{svg "octicon-git-branch" 16}}</span>
                            <span {{if ge .NumForks 1000}}data-tooltip-content="{{.NumForks}}"{{end}}>{{CountFmt .NumForks}}</span>
                        </a>
                    </div>
                </div>
                {{$description := .DescriptionHTML $.Context}}
                {{if $description}}
                    <div class="flex-item-body">{{$description}}</div>
                {{end}}
                {{if .Topics}}
                    <div class="label-list">
                    {{range .Topics}}
                        {{if ne . ""}}<a class="ui label" href="{{AppSubUrl}}/explore/repos?q={{.}}&topic=1">{{.}}</a>{{end}}
                    {{end}}
                    </div>
                {{end}}
                <div class="flex-item-body">{{ctx.Locale.Tr "org.repo_updated"}} {{TimeSinceUnix .UpdatedUnix ctx.Locale}}</div>
            </div>
        </div>
    {{else}}
    <div>
        {{ctx.Locale.Tr "search.no_results"}}
    </div>
    {{end}}
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const repoThumbnails = document.querySelectorAll('.repo-thumbnail');
        const repoList = document.getElementById('repo-list');
        const repoItems = Array.from(repoList.getElementsByClassName('flex-item'));

        repoThumbnails.forEach(thumbnail => {
            const repoName = thumbnail.dataset.repo;
            const apiUrl = `${window.location.origin}/api/v1/repos/${repoName}/contents`;

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const jpgFile = data.find(file => file.name === 'thumbnail.jpg');
                    const pngFile = data.find(file => file.name === 'thumbnail.png');

                    if (jpgFile) {
                        thumbnail.src = jpgFile.download_url;
                    } else if (pngFile) {
                        thumbnail.src = pngFile.download_url;
                    } // No need for else as the default src is already set to your logo
                })
                .catch(error => {
                    console.error('Error fetching repository contents:', error);
                });
        });

        // Insert ads every 10th tile
        for (let i = 9; i < repoItems.length; i += 10) {
            const adTile = document.createElement('div');
            adTile.className = 'flex-item';
            adTile.innerHTML = `
                <ins class="adsbygoogle"
                     style="display:block; width:100%; max-width:300px; max-height:400px;"
                     data-ad-client="ca-pub-5905482226999721"
                     data-ad-slot="1234567890"
                     data-ad-format="auto"
                     data-full-width-responsive="true"></ins>
                <script>
                    (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
            `;
            repoList.insertBefore(adTile, repoItems[i]);
        }
    });
</script>